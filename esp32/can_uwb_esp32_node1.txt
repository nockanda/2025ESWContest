//송신기

//라이브러리
#include <ACAN_ESP32.h>
#define RXD2 16
#define TXD2 17
#define INIT 22
#define RES 23

union{
  float input;
  byte output[4];
}float2byte;

//1초라는 타이밍을 생성하기 위한 시간을 담는 변수
unsigned long t = 0;
char str[6];
unsigned long cnt = 0;
void setup() {
  Serial.begin(115200); //나 컴퓨터와 USB로 통신할거야!
  Serial2.begin(115200, SERIAL_8N1, RXD2, TXD2);
  pinMode(INIT,OUTPUT);
  pinMode(RES,OUTPUT);
  //캔통신의 통신속도를 결정하는 부분
  //125k(125000UL), 250k(250000UL), 500k(500000UL)
  ACAN_ESP32_Settings settings(500000UL); //125k

  //실제로 통신할거기 때문에 루프백모드를 설정하면 안된다
  //settings.mRequestedCANMode = ACAN_ESP32_Settings::LoopBackMode;
  
  //Default Tx:GPIO4, Rx:GPIO5
  settings.mRxPin = GPIO_NUM_18; //TX2
  settings.mTxPin = GPIO_NUM_19; //RX2

  //통신속도와 연결핀을 기준으로 캔통신 초기화
  const uint32_t ret = ACAN_ESP32::can.begin(settings) ;

  //ESP32에 설정된 캔통신 파라미터가 ~~~게 되었다라는것을 단순 프린트해준다!
  if (ret == 0) {    
    Serial.print("Bit Rate prescaler: ") ;
    Serial.println(settings.mBitRatePrescaler) ;
    Serial.print("Time Segment 1:     ") ;
    Serial.println(settings.mTimeSegment1) ;
    Serial.print("Time Segment 2:     ") ;
    Serial.println(settings.mTimeSegment2) ;
    Serial.print("RJW:                ") ;
    Serial.println(settings.mRJW) ;
    Serial.print("Triple Sampling:    ") ;
    Serial.println(settings.mTripleSampling ? "yes" : "no") ;
    Serial.print("Actual bit rate:    ") ;
    Serial.print(settings.actualBitRate ()) ;
    Serial.println(" bit/s") ;
    Serial.print("Exact bit rate ?    ") ;
    Serial.println(settings.exactBitRate () ? "yes" : "no") ;
    Serial.print("Distance            ") ;
    Serial.print(settings.ppmFromDesiredBitRate ()) ;
    Serial.println(" ppm") ;
    Serial.print("Sample point:       ") ;
    Serial.print(settings.samplePointFromBitStart ()) ;
    Serial.println("%") ;
    Serial.println("Configuration OK!");
  } else {
    Serial.print("Configuration error 0x") ;
    Serial.println(ret, HEX) ;    
  }
  
  delay(2000);
  Serial.println("UWB INIT");
  Serial2.println("AT+switchdis=1");
}

void loop() {
  //이거는 하나 필요함!
  CANMessage frame;
  if(Serial2.available()){
    digitalWrite(INIT,!digitalRead(INIT));
    String data = Serial2.readStringUntil('\n');
    if(data.indexOf("distance") != -1){
      int num = data[8] - '0';
      float2byte.input = data.substring(10,data.length()-2).toFloat();
      //Serial.println(num);
      //Serial.println(float2byte.input);
      frame.id = 0x001;
      frame.rtr = 0; //확실히 이게 무슨 기능을 하는지는 모르겠음!
      frame.len = 8; //내가 보낼 데이터의 길이
      frame.data[0] = num;
      frame.data[1] = float2byte.output[0];
      frame.data[2] = float2byte.output[1];
      frame.data[3] = float2byte.output[2];
      frame.data[4] = float2byte.output[3];
  
      //전송
      if (ACAN_ESP32::can.tryToSend(frame)) {
        //성공 
        //Serial.println("전송에 성공했습니다");
        digitalWrite(RES,!digitalRead(RES));
      } 
    }
  }
}